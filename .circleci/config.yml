# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
orbs:
  allure: ayte/allure@0.1.3
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:11-jdk-browsers

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/circleCiTesting

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Resolve Maven Dependencies
          command: mvn dependency:go-offline
            # generate allure html report
      - run:
          name: Update apt
          command: sudo apt update
      - run:
          name: Installing gzip
          command: sudo apt install gzip
      - run:
          name: Checking gzip version
          command: gzip --version
      - run:
          name: Install npm
          command: sudo apt install nodejs npm
      - run:
          name: Unpacking allure to /opt
          command: sudo npm install -g allure-commandline --save-dev
      - run:
          name: Checking allure version
          command: allure --version
      - run:
          name: Installing wget
          command: sudo apt install wget
      - run:
          name: Checking wget version
          command: wget --version
      - run:
          name: Setting up browser with specified version
          command: wget --version
      - run:
          name: Test Setup
          command: |
            Xvfb :0 -ac &
            export DISPLAY=:99
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      # run tests!
      - run:
          name: Run Tests
          command: mvn clean test -Dsurefire.suiteXmlFiles=src/test/resources/testsuits/SmokeRX.xml

      - run:
          name: Generate allure html report
          command: allure generate -c target/allure-results -o target/allure-results-html
          when: always

      - run:
          name: Add allure/results folder to zip archive
          command: tar cvzf allure-results.zip target/allure-results
          when: always
      - run:
          name: Copy archive to target
          command: mkdir -p target/allure-results-zip && cp allure-results.zip target/allure-results-zip
          when: always

        # store artifacts and results
      - store_artifacts:
          path: target
      - store_artifacts:
          path: test-output
      - store_test_results:
          path: src/main/java/old.RXConfig/RX.properties

workflows:
  version: 2
  build-workflow:
    jobs:
      - build
  nightly:
    triggers:
      - schedule:
          cron: "0 5 * * 1"
          filters:
            branches:
              only:
                - master
    jobs:
      - build
 