# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
orbs:
  allure: ayte/allure@0.1.3
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:11-jdk-browsers

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/circleCiTesting

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:



      - checkout
      


      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Resolve Maven Dependencies
          command: mvn dependency:go-offline

      #- run:
         # name: Install latest version of Chrome
          #command: |
           #sudo wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
           #sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
            #sudo apt-get update
            #sudo apt-get -y install google-chrome-stable
      #- run:
         # name: Use ChromeDriver found in repository
          #command: |
           #sudo chmod 777 /home/circleci/circleCiTesting/UITest/chromeexe/chromedriver.exe
            #sudo apt-get install libxi6 libgconf-2-4
            #sudo apt-get -y install xvfb gtk2-engines-pixbuf
            #sudo apt-get -y install xfonts-cyrillic xfonts-100dpi xfonts-75dpi xfonts-base xfonts-scalable
            #sudo apt-get install xvfb
            #sudo apt-get -y install imagemagick x11-apps
      - run:
          name: Test Setup
          command: |
            Xvfb :0 -ac &
            export DISPLAY=:99
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      # run tests!
      - run:
          name: Run Tests
          command:
            mvn clean test -Dsurefire.suiteXmlFiles=src/test/resources/testsuits/SmokeRX.xml

      #generate allure html report
#      - run:
#                name: Allure archive download
#                command: sudo npm install -g allure
#                command: curl -L https://github.com/allure-framework/allure2/releases/download/2.19.0/allure-commandline-2.19.0.zip -o /tmp/allure.zip
#      - run:
#                      name: Archive extraction
#                      command: unzip /tmp/allure.zip
#      - run:
#                      name: Allure installation
#                      command: sudo mv allure-2.19.0 /usr/local/share/allure
#      - run:
#                      name: Allure binary symlinking
#                      command: sudo ln -s /usr/local/share/allure/bin/allure /usr/local/bin/allure
      install:
        description: Installs Allure Framework and registers it as /usr/local/bin/allure
        parameters:
          version:
            description: Allure version to use
            type: string
            default: 2.13.1
        steps:
          - run:
              name: Allure archive download
              command: curl -L https://github.com/allure-framework/allure2/releases/download/<< parameters.version >>/allure-commandline-<< parameters.version >>.zip -o /tmp/allure.zip
          - run:
              name: Archive extraction
              command: unzip /tmp/allure.zip
          - run:
              name: Allure installation
              command: sudo mv allure-<< parameters.version >> /usr/local/share/allure
          - run:
              name: Allure binary symlinking
              command: sudo ln -s /usr/local/share/allure/bin/allure /usr/local/bin/allure
        report:
          description: Generates report using Allure Framework
          parameters:
            configuration-path:
              description: Path to Allure configuration, uses default one if omitted
              type: string
              default: /usr/local/share/allure/config/allure.yml
            target-path:
              description: Path for report directory
              type: string
              default: allure-report
            results-path:
              description: Path to directory with test results
              type: string
              default: allure-results
            artifact-path:
              description: Path that will be used when storing result as artifact
              type: string
              default: Report/Allure
          steps:
            - run:
                name: Allure report generation (<< parameters.results-path >> -> << parameters.target-path >>)
                command: |
                  allure generate \
                    --config << parameters.configuration-path >> \
                    --report-dir << parameters.target-path >> \
                    << parameters.results-path >>
            - store_artifacts:
                path: << parameters.target-path >>
                destination: << parameters.artifact-path >>





      - run:
          name: Generate allure html report
          command:
            allure generate -c target/allure-results -o target/allure-results-html

      # store artifacts and results
      - store_artifacts:
          path: target
      - store_artifacts:
          path: test-output
      - store_test_results:
          path: src/main/java/old.RXConfig/RX.properties

workflows:
  version: 2
  build-workflow:
    jobs:
      - build
  nightly:
    triggers:
      - schedule:
          cron: "0 5 * * 1"
          filters:
            branches:
              only:
                - master
    jobs:
      - build
 